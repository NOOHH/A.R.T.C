@extends('student.student-dashboard.student-dashboard-layout')

@section('title', 'Calendar')

@push('styles')
<link rel="stylesheet" href="{{ asset('css/student/student-calendar.css') }}">
@endpush

@section('content')
<div class="calendar-container">
    <div class="calendar-header">
        <h1>Calendar</h1>
        <div class="calendar-navigation">
            <button class="nav-btn" id="prevMonth">‹</button>
            <span class="current-month" id="currentMonth">January 2025</span>
            <button class="nav-btn" id="nextMonth">›</button>
        </div>
    </div>

    <div class="calendar-grid">
        <div class="calendar-weekdays">
            <div class="weekday">Sun</div>
            <div class="weekday">Mon</div>
            <div class="weekday">Tue</div>
            <div class="weekday">Wed</div>
            <div class="weekday">Thu</div>
            <div class="weekday">Fri</div>
            <div class="weekday">Sat</div>
        </div>

        <div class="calendar-days" id="calendarDays">
            <!-- Calendar days will be generated by JavaScript -->
        </div>
    </div>

    <div class="calendar-events">
        <h3>Upcoming Events</h3>
        <div class="event-list">
            <div class="event-item">
                <div class="event-date">Jan 15</div>
                <div class="event-details">
                    <h4>Assignment Due</h4>
                    <p>Calculus 1 - Chapter 3 Problems</p>
                </div>
            </div>
            <div class="event-item">
                <div class="event-date">Jan 18</div>
                <div class="event-details">
                    <h4>Quiz</h4>
                    <p>Engineering Fundamentals</p>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@section('scripts')
<script>
// Basic calendar functionality
document.addEventListener('DOMContentLoaded', function() {
    const calendarDays = document.getElementById('calendarDays');
    const currentMonthElement = document.getElementById('currentMonth');
    const prevMonthBtn = document.getElementById('prevMonth');
    const nextMonthBtn = document.getElementById('nextMonth');

    let currentDate = new Date();
    
    function generateCalendar(year, month) {
        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const daysInMonth = lastDay.getDate();
        const startingDayOfWeek = firstDay.getDay();
        
        calendarDays.innerHTML = '';
        
        // Add empty cells for days before the first day of the month
        for (let i = 0; i < startingDayOfWeek; i++) {
            const emptyDay = document.createElement('div');
            emptyDay.className = 'calendar-day empty';
            calendarDays.appendChild(emptyDay);
        }
        
        // Add days of the month
        for (let day = 1; day <= daysInMonth; day++) {
            const dayElement = document.createElement('div');
            dayElement.className = 'calendar-day';
            dayElement.textContent = day;
            
            // Highlight today
            const today = new Date();
            if (year === today.getFullYear() && month === today.getMonth() && day === today.getDate()) {
                dayElement.classList.add('today');
            }
            
            calendarDays.appendChild(dayElement);
        }
        
        // Update month display
        const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
                           'July', 'August', 'September', 'October', 'November', 'December'];
        currentMonthElement.textContent = `${monthNames[month]} ${year}`;
    }
    
    prevMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
    });
    
    nextMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
    });
    
    // Initialize calendar
    generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
});
</script>
@endsection
